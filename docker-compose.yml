services:
  nats-service:
    image: nats:latest
    ports:
      - "8222:8222"

  client-gateway:
    build:
      context: ./client-gateway
      dockerfile: dockerfile
    ports:
      - ${CLIENT_GATEWAY_PORT}:3000
    volumes:
      - ./client-gateway/src:/usr/src/app/src
    environment:
      - PORT=3000
      - NATS_SERVICE=nats://nats-service:4222

  auth-ms:
    depends_on:
      - auth-db
    build:
      context: ./auth-ms
      dockerfile: dockerfile
    volumes:
      - ./auth-ms/src:/usr/src/app/src
    environment:
      - PORT=3001
      - NATS_SERVICE=nats://nats-service:4222
      - DATABASE_URL=${DATABASE_URL_AUTH}
      - JWTSECRET=${JWTSECRET}

  products-ms:
    depends_on:
      - products-db
    build:
      context: ./products-ms
      dockerfile: dockerfile
    volumes:
      - ./products-ms/src:/usr/src/app/src
    environment:
      - PORT=3002
      - DATABASE_URL=${DATABASE_URL_PRODUCTS}
      - NATS_SERVICE=nats://nats-service:4222

  orders-ms:
    depends_on:
      - orders-db
    build:
      context: ./orders-ms
      dockerfile: dockerfile
    volumes:
      - ./orders-ms/src:/usr/src/app/src
    environment:
      - DATABASE_URL=${DATABASE_URL_ORDERS}
      - NATS_SERVICE=nats://nats-service:4222

  payments-ms:
    build:
      context: ./payments-ms
      dockerfile: dockerfile
    ports:
      - ${PAYMENTS_MS_PORT}:${PAYMENTS_MS_PORT}
    volumes:
      - ./payments-ms/src:/usr/src/app/src
    environment:
      - PORT=${PAYMENTS_MS_PORT}
      - NATS_SERVICE=nats://nats-service:4222
      - STRIPE_SECRET_CLAVE=${STRIPE_SECRET_CLAVE}
      - STRIPE_SUCCESS_URL=${STRIPE_SUCCESS_URL}
      - STRIPE_CANCEL_URL=${STRIPE_CANCEL_URL}
      - WEBHOOK_STRIPE=${WEBHOOK_STRIPE}

  invoice-ms:
    build:
      context: ./invoice-ms
      dockerfile: dockerfile
    volumes:
      - ./invoice-ms/src:/usr/src/app/src
    environment:
      - PORT=3005
      - NATS_SERVICE=nats://nats-service:4222

  users-ms:
    depends_on:
      - users-db
    build:
      context: ./users-ms
      dockerfile: dockerfile
    volumes:
      - ./users-ms/src:/usr/src/app/src
    environment:
      - PORT=3006
      - NATS_SERVICE=nats://nats-service:4222
      - DATABASE_URL=${DATABASE_URL_USERS}

  products-db:
    container_name: "products-base"
    image: postgres:16.3
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./products-ms/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=administrador
      - POSTGRES_DB=productsms
      - POSTGRES_PASSWORD=admin123

  orders-db:
    container_name: "orders-base"
    image: postgres:16.3
    ports:
      - "5433:5432"
    restart: always
    volumes:
      - ./orders-ms/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=administrador
      - POSTGRES_DB=ordersms
      - POSTGRES_PASSWORD=admin123

  auth-db:
    image: mongo:6
    restart: always
    container_name: auth-base
    ports:
      - "27017:27017"
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]
    volumes:
      - ./auth-ms/mongo:/data/db

  users-db:
    image: mysql:8.4
    container_name: users-base
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: user-db
    ports:
      - "3306:3306"
    volumes:
      - "./users-ms/mysql:/var/lib/mysql"

  pgAdmin:
    depends_on:
      - products-db
      - orders-db
    image: dpage/pgadmin4:8.6
    volumes:
      - ./products-ms/pgadmin:/var/lib/pgadmin
    ports:
      - "8080:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@mysql.com
      - PGADMIN_DEFAULT_PASSWORD=admin123
    restart: always

  adminer:
    depends_on:
      - users-db
    image: adminer
    restart: always
    ports:
      - "8085:8080"
